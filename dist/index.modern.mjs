import"isomorphic-unfetch";function e(){return e=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},e.apply(this,arguments)}function t(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t.indexOf(r=o[a])>=0||(n[r]=e[r]);return n}function r(e){let t="";for(let r=0;r<e;r++)t+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(62*Math.random()));return t}async function a(){return fetch("https://api.ipify.org?format=json").then(e=>e.json()).then(e=>{const t=e.ip;return console.log("IP Address:",t),t}).catch(e=>{console.error("Error fetching IP address:",e)})}class n{constructor(e){var t,a;this.apiKey=void 0,this.clientKey=void 0,this.requestId=void 0,this.baseUrl=void 0,this.apiKey=e.apiKey,this.clientKey=e.clientKey,this.requestId=null!=(t=e.requestId)?t:r(12),this.baseUrl=null!=(a=e.baseUrl)?a:"https://api-sandbox.qorcommerce.io/v3"}async request(t,r,a){const n=new URL(`${this.baseUrl}${t}`);if(r){const e=new URLSearchParams;Object.entries(r).forEach(([t,r])=>{e.append(t,r)}),n.search=new URLSearchParams(e).toString()}const o=e({},a,{headers:{"Content-Type":"application/json","x-api-key":this.apiKey,"x-client-key":this.clientKey,"x-request-id":this.requestId}});console.log("Sending Request",JSON.stringify(`${n}`),o);const s=await fetch(n,o);if(s.ok)return s.json();throw console.error("ERROR",s.statusText),new Error(s.statusText)}}const o="/payment/transactions";class s extends n{async fetchPaymentTransactionById(e){const t=await this.request(`/payment/transaction/${e}`);return{status:t.status,code:t.code,message:t.message,data:t.data[0]}}listPaymentTransactions(e){return this.request(`${o}`,e)}listPaymentTransactionsByProfileId(e){return this.request(`/payment/transactions/profile/${e}`)}listPaymentTransactionsByBatchId(e){return this.request(`/payment/transactions/batch/${e}`)}fetchAchTransactionById(e){return this.request(`/ach/transactions/${e}`)}listAchTransactions(e){return this.request(`${o}`,e)}}class i extends n{fetchMarketplaceTransactionByBatchId(e){return this.request(`payment/transactions/mp/batch/${e}`)}createMarketplaceMerchantAccount(e){return this.request("/channels/new_marketplace_merchant",{method:"POST",body:JSON.stringify({data:e})})}}const c="payment/transaction/proof_of_delivery";class d extends n{listProofOfDelivery(e){return this.request(`${c}`,e)}fetchProofOfDeliveryById(e){return this.request(`${c}/${e}`)}createProofOfDelivery(e){return this.request(`/${c}`,{method:"POST",body:JSON.stringify(e)})}patchProofOfDelivery(e){return this.request(`/${c}`,{method:"PATCH",body:JSON.stringify(e)})}deleteProofOfDelivery(e){return this.request(`/${c}/${e}`,{method:"DELETE"})}}const l=["token_detail","card_detail","track_detail","customer_detail","discount_detail","items_detail","shipping_detail","three_ds"];class u extends n{async processCreditCardPayment(n){var o;const{token_detail:s,card_detail:i,track_detail:c,customer_detail:d,discount_detail:u,items_detail:p,shipping_detail:m,three_ds:h}=n,_=t(n,l);if(!n.type)throw new Error('You must provide a processing type.  Accepted values are "sale", "authorize", "L2" and "L3"');if("SALE"!==n.type.toUpperCase()&&"AUTHORIZE"!==n.type.toUpperCase()&&"L2"!==n.type.toUpperCase()&&"L3"!==n.type.toUpperCase())throw new Error("Invalid processing type.  Accepted 'type' values are 'sale', 'authorize' and 'L2' for Level 2 transactions and 'L3' for Level 3 transactions");if(!("L2"!==n.type.toUpperCase()||n.total_tax_amount&&d&&Object.keys(d).length))throw new Error("You must provide a 'total_tax_amount' and 'customer_detail' values for Level 2 transactions");if(!(("L3"!==n.type.toUpperCase()||n.total_tax_amount&&d&&Object.keys(d).length)&&p&&Object.keys(p).length))throw new Error("You must provide a 'total_tax_amount', 'customer_detail' and at least one 'items_detail' object for Level 3 transactions");if(!Object.keys(i).length&&!Object.keys(s).length&&!Object.keys(c).length||Object.keys(i).length&&Object.keys(s).length||Object.keys(i).length&&Object.keys(c).length||Object.keys(s).length&&Object.keys(c).length)throw new Error("You must provide only one of 'card_detail', 'token_detail', or 'track_detail' objects with required values to process a payment");if(Object.keys(i).length&&await async function(e){if(!e.number)return new Error("A 'card_detail.number' value is required");if(!e.exp_month)return new Error("A 'card_detail.exp_month' value is required");if(!e.exp_year)return new Error("A 'card_detail.exp_year' value is required");if(!e.cvv)return new Error("A 'card_detail.cvv' value is required");if(!function(e){const t=e.replace(/[\s-]/g,"");if(!/^\d+$/.test(t)||!(t.length>=13&&t.length<=19))return!1;let r=0,a=!1;for(let e=t.length-1;e>=0;e--){let n=parseInt(t.charAt(e));a&&(n*=2,n=n>9?n-9:n),r+=n,a=!a}return r%10==0}(e.number))return new Error("Invalid 'card_detail.number' value");if(!function(e,t){const r=new Date,a=r.getMonth()+1,n=r.getFullYear();return!(t>n+10)&&(t>n||t===n&&e>=a)}(e.exp_month,e.exp_year))return new Error("Invalid 'card_detail.exp_month' or 'card_detail.exp_year' value");const t=function(e){const t=e.replace(/[\s-]/g,"");let r="";return r=/^4/.test(t)?"Visa":/^5[1-5]/.test(t)?"Mastercard":/^3[47]/.test(t)?"American Express":/^6(?:011|5)/.test(t)?"Discover":/^(?:2131|1800|35\d{3})/.test(t)?"JCB":/^3(?:0[0-5]|[68])/.test(t)?"Diners Club":/^(?:5[0678]|6304|6390|67\d{2})/.test(t)?"Maestro":"Unknown",r}(e.number);if(!t)return new Error("Invalid or not supported credit card brand");if("American Express"===t&&4!==e.cvv.toString().length||3!==e.cvv.toString().length)return new Error("Invalid 'card_detail.cvv' value");if(e.store_token&&!e.token_nickname)throw new Error("You must provide 'card_detail.nickname' to store a card token");return!0}(i).catch(e=>{throw new Error(e)}),null!=i&&i.store_token&&(null==d||!d.email))throw new Error("You must provide a 'customer_detail.email' address to store a card token");if(Object.keys(s).length&&!s.token)throw new Error("You must provide a 'token_detail.token' value");if(Object.keys(s).length&&!s.cvv)throw new Error("You must provide a 'token_detail.cvv' value");if(n.send_receipt&&(null==d||!d.email))throw new Error("You must provide a 'customer_detail.email' value to send a payment receipt");const y="SALE"===n.type.toUpperCase()||"L2"===n.type.toUpperCase()||"L3"===n.type.toUpperCase()?"payment/sale/manual":"payment/sale/authorize",v=e({islvl3:"L3"===n.type.toUpperCase()||"L2"===n.type.toUpperCase()?1:0,mid:n.mid,amount:n.total_amount,total_tax:n.total_tax_amount,ipaddress:n.ip_address||a(),currency:n.currency||"USD",orderId:n.order_id||"ORDER_"+r(12),invoiceId:n.invoice_id,purchase_order:n.purchase_order,risk_score:n.risk_score,reference_id:n.reference_id,topt:n.topt,tid:n.terminal_id,metadata:n.meta_data,send_rcpt:!0===n.send_receipt?1:0,shipping_amount:null==m?void 0:m.amount,shipping_zip:null==m?void 0:m.postal_code,shipping_country:null==m?void 0:m.country_code,creditcard:(null==i?void 0:i.number)||(null==s?void 0:s.token),cvv:(null==i?void 0:i.cvv)||s.cvv,month:null==i?void 0:i.exp_month,year:null==i?void 0:i.exp_year,cardfullname:null==i||null==(o=i.cardholder)?void 0:o.toUpperCase(),bzip:null==i?void 0:i.postal_code,baddress:null==i?void 0:i.street_1,baddress2:null==i?void 0:i.street_2,bcity:null==i?void 0:i.city,bstate:null==i?void 0:i.state_code,bcountry:null==i?void 0:i.country_code,trackdata:c.track,ksnTrack:c.ksn,cash_discount_amount:null==u?void 0:u.amount,cash_discount_percentage:null==u?void 0:u.percent,line_items:p,response_3DS:h.response,CAVV:h.CAVV,ECIFlag:h.ECIFlag,XID:h.XID,store_card:!0===(null==i?void 0:i.store_token)?1:0,nickname:null==i?void 0:i.token_nickname,cfirstname:null==d?void 0:d.first_name,clastname:null==d?void 0:d.last_name,cemail:null==d?void 0:d.email,cphone:null==d?void 0:d.phone,cwebaddress:null==d?void 0:d.website},_);return this.request(`/${y}`,{method:"POST",body:JSON.stringify({transaction_data:v})})}async processCreditCardVoid(e){return this.request("/payment/void",{method:"POST",body:JSON.stringify({transaction_data:e})})}async processCreditCardRefund(e){return this.request("/payment/refund",{method:"POST",body:JSON.stringify({transaction_data:e})})}async processCreditCardCapture(e){return this.request("/payment/capture",{method:"POST",body:JSON.stringify({transaction_data:e})})}}const p=["ach_detail","customer_detail"];class m extends n{async processAchPayment(r){const{ach_detail:a,customer_detail:n}=r,o=t(r,p);if(!r.type)throw new Error("You must provide a 'type' value to process an ACH payment.  Accepted values are 'CREDIT' to payout an ACH payment or 'DEBIT' to draw payment from a customer account");if("CREDIT"!==r.type.toUpperCase()&&"DEBIT"!==r.type.toUpperCase())throw new Error("You must provide a 'type' value of 'CREDIT' to payout an ACH payment or 'DEBIT' to draw payment from a customer account");if(!Object.keys(a).length&&!r.token)throw new Error("You must provide an 'ach_detail' object or a 'token' value to process an ACH payment");if(a&&r.token)throw new Error("You must provide one of an 'ach_detail' object or a 'token' value to process an ACH payment.  Not both");if(a.store_token&&(null==n||!n.email))throw new Error("You must provide a 'customer_detail.email' value to create and store an ACH payment token");if(a.store_token&&(null==a||!a.token_nickname))throw new Error("You must provide an 'ach_detail.token_nickname' value to create and store an ACH payment token");if(!a.account_kind||!a.account_type)throw new Error("You must provide both an 'ach_detail.account_kind' and 'ach_detail.account_type' values to process a payment");if("PERSONAL"!==a.account_kind.toLocaleUpperCase()&&"BUSINESS"!==a.account_kind.toLocaleUpperCase())throw new Error("You must provide a 'ach_detail.account_kind' value of 'PERSONAL' or 'BUSINESS' to process a payment");if("CHECKING"!==a.account_type.toLocaleUpperCase()&&"SAVINGS"!==a.account_type.toLocaleUpperCase())throw new Error("You must provide a 'ach_detail.account_type' value of 'CHECKING' or 'SAVINGS' to process a payment");let s;"CHECKING"===a.account_type.toUpperCase()?"PERSONAL"===a.account_kind.toUpperCase()?s=1:"BUSINESS"===a.account_kind.toUpperCase()&&(s=3):"SAVINGS"===a.account_type.toUpperCase()&&("PERSONAL"===a.account_kind.toUpperCase()?s=2:"BUSINESS"===a.account_kind.toUpperCase()&&(s=4));const i="DEBIT"===r.type.toUpperCase()?"payment/ach/debit":"payment/ach/credit";return this.request(`/${i}`,{method:"POST",body:JSON.stringify({transaction_data:e({type:r.type,mid:r.mid,amount:r.total_amount,orderid:r.order_id,checknumber:null==a?void 0:a.check_number,checkdate:null==a?void 0:a.check_date,transactiondate:null==a?void 0:a.process_date,name_on_account:null==a?void 0:a.account_holder,routing_number:null==a?void 0:a.routing_number,account_number:null!=a&&a.account_number?null==a?void 0:a.account_number:r.token,account_type:s,bankname:null==a?void 0:a.bank_name,bankcity:null==a?void 0:a.bank_city,bankstate:null==a?void 0:a.bank_state,customerid:null==n?void 0:n.customer_id,cfirstname:null==n?void 0:n.first_name,clastname:null==n?void 0:n.last_name,cphone:null==n?void 0:n.phone,cemail:null==n?void 0:n.email,caddress1:null==n?void 0:n.address_street_1,caddress2:null==n?void 0:n.address_street_2,ccity:null==n?void 0:n.address_city,cstate:null==n?void 0:n.address_state_code,czip:null==n?void 0:n.address_postal_code,memo:r.memo,store_accnt:null!=a&&a.store_token?1:0,account_nickname:null!=a&&a.store_token?null==a?void 0:a.token_nickname:"",send_rcpt:r.send_receipt},o)})})}async processCreditCardVoid(e){return this.request("/payment/ach/void",{method:"POST",body:JSON.stringify({transaction_data:e})})}async processCreditCardRefund(e){return this.request("/payment/ach/refund",{method:"POST",body:JSON.stringify({transaction_data:e})})}}class h extends n{async processCashPayment(e){var t,r,a,n;return this.request("/payment/cash",{method:"POST",body:JSON.stringify({type:"cash",mid:e.mid,transaction_data:{amount:e.amount,currency:e.currency,orderId:e.order_id,invoiceId:e.invoice_id,reference_id:e.reference_id,service_charge:e.service_charge,totp:e.totp,ipaddress:e.ip_address,cfirstname:null==(t=e.customer_detail)?void 0:t.first_name,clastname:null==(r=e.customer_detail)?void 0:r.last_name,cemail:null==(a=e.customer_detail)?void 0:a.email,cphone:null==(n=e.customer_detail)?void 0:n.phone,items:e.items_detail}})})}}class _{constructor(e){this.cardPayments=void 0,this.achPayments=void 0,this.cashPayments=void 0,this.transactions=void 0,this.marketplace=void 0,this.proofOfDelivery=void 0,this.cardPayments=new u(e),this.achPayments=new m(e),this.cashPayments=new h(e),this.transactions=new s(e),this.marketplace=new i(e),this.proofOfDelivery=new d(e)}}export{_ as QorDirectSDK};
